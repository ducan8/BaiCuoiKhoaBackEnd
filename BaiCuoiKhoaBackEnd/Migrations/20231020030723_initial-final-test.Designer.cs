// <auto-generated />
using System;
using BaiCuoiKhoaBackEnd.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BaiCuoiKhoaBackEnd.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231020030723_initial-final-test")]
    partial class initialfinaltest
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BaiCuoiKhoaBackEnd.Entities.BaiViet", b =>
                {
                    b.Property<int>("BaiVietId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BaiVietId"));

                    b.Property<int>("ChuDeId")
                        .HasColumnType("int");

                    b.Property<string>("HinhAnh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoiDungNgan")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("TaiKhoanId")
                        .HasColumnType("int");

                    b.Property<string>("TenBaiViet")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TenTacGia")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ThoiGianTao")
                        .HasMaxLength(50)
                        .HasColumnType("datetime2");

                    b.HasKey("BaiVietId");

                    b.HasIndex("ChuDeId");

                    b.HasIndex("TaiKhoanId");

                    b.ToTable("BaiViet");
                });

            modelBuilder.Entity("BaiCuoiKhoaBackEnd.Entities.ChuDe", b =>
                {
                    b.Property<int>("ChuDeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChuDeId"));

                    b.Property<int>("LoaiBaiVietId")
                        .HasColumnType("int");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenChuDe")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ChuDeId");

                    b.HasIndex("LoaiBaiVietId");

                    b.ToTable("ChuDe");
                });

            modelBuilder.Entity("BaiCuoiKhoaBackEnd.Entities.DangKyHoc", b =>
                {
                    b.Property<int>("DangKyHocId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DangKyHocId"));

                    b.Property<int>("HocVienId")
                        .HasColumnType("int");

                    b.Property<int>("KhoaHocId")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayDangKy")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<int>("TaiKhoanId")
                        .HasColumnType("int");

                    b.Property<int>("TinhTrangHocId")
                        .HasColumnType("int");

                    b.HasKey("DangKyHocId");

                    b.HasIndex("HocVienId");

                    b.HasIndex("KhoaHocId");

                    b.HasIndex("TaiKhoanId");

                    b.HasIndex("TinhTrangHocId");

                    b.ToTable("DangKyHoc");
                });

            modelBuilder.Entity("BaiCuoiKhoaBackEnd.Entities.HocVien", b =>
                {
                    b.Property<int>("HocVienId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HocVienId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("HinhAnh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhuongXa")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("QuanHuyen")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("SoNha")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TinhThanh")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("HocVienId");

                    b.ToTable("HocVien");
                });

            modelBuilder.Entity("BaiCuoiKhoaBackEnd.Entities.KhoaHoc", b =>
                {
                    b.Property<int>("KhoaHocId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KhoaHocId"));

                    b.Property<string>("GioiThieu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HinhAnh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("HocPhi")
                        .HasColumnType("float");

                    b.Property<int>("LoaiKhoaHocId")
                        .HasColumnType("int");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SoHocVien")
                        .HasColumnType("int");

                    b.Property<int>("SoLuongMon")
                        .HasColumnType("int");

                    b.Property<string>("TenKhoaHoc")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ThoiGianHoc")
                        .HasColumnType("int");

                    b.HasKey("KhoaHocId");

                    b.HasIndex("LoaiKhoaHocId");

                    b.ToTable("KhoaHoc");
                });

            modelBuilder.Entity("BaiCuoiKhoaBackEnd.Entities.LoaiBaiViet", b =>
                {
                    b.Property<int>("LoaiBaiVietId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LoaiBaiVietId"));

                    b.Property<string>("TenLoai")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("LoaiBaiVietId");

                    b.ToTable("LoaiBaiViet");
                });

            modelBuilder.Entity("BaiCuoiKhoaBackEnd.Entities.LoaiKhoaHoc", b =>
                {
                    b.Property<int>("LoaiKhoaHocId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LoaiKhoaHocId"));

                    b.Property<string>("TenLoai")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("LoaiKhoaHocId");

                    b.ToTable("LoaiKhoaHoc");
                });

            modelBuilder.Entity("BaiCuoiKhoaBackEnd.Entities.QuyenHan", b =>
                {
                    b.Property<int>("QuyenHanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuyenHanId"));

                    b.Property<string>("TenQuyenHan")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("QuyenHanId");

                    b.ToTable("QuyenHan");
                });

            modelBuilder.Entity("BaiCuoiKhoaBackEnd.Entities.TaiKhoan", b =>
                {
                    b.Property<int>("TaiKhoanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaiKhoanId"));

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("QuyenHanId")
                        .HasColumnType("int");

                    b.Property<string>("TenDangNhap")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TenNguoiDung")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TaiKhoanId");

                    b.HasIndex("QuyenHanId");

                    b.ToTable("TaiKhoan");
                });

            modelBuilder.Entity("BaiCuoiKhoaBackEnd.Entities.TinhTrangHoc", b =>
                {
                    b.Property<int>("TinhTrangHocId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TinhTrangHocId"));

                    b.Property<string>("TenTinhTrang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TinhTrangHocId");

                    b.ToTable("TinhTrangHoc");
                });

            modelBuilder.Entity("BaiCuoiKhoaBackEnd.Entities.BaiViet", b =>
                {
                    b.HasOne("BaiCuoiKhoaBackEnd.Entities.ChuDe", "ChuDe")
                        .WithMany()
                        .HasForeignKey("ChuDeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BaiCuoiKhoaBackEnd.Entities.TaiKhoan", "TaiKhoan")
                        .WithMany()
                        .HasForeignKey("TaiKhoanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChuDe");

                    b.Navigation("TaiKhoan");
                });

            modelBuilder.Entity("BaiCuoiKhoaBackEnd.Entities.ChuDe", b =>
                {
                    b.HasOne("BaiCuoiKhoaBackEnd.Entities.LoaiBaiViet", "LoaiBaiViet")
                        .WithMany("DanhSachChuDe")
                        .HasForeignKey("LoaiBaiVietId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoaiBaiViet");
                });

            modelBuilder.Entity("BaiCuoiKhoaBackEnd.Entities.DangKyHoc", b =>
                {
                    b.HasOne("BaiCuoiKhoaBackEnd.Entities.HocVien", "HocVien")
                        .WithMany("DanhSachDangKyHoc")
                        .HasForeignKey("HocVienId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BaiCuoiKhoaBackEnd.Entities.KhoaHoc", "KhoaHoc")
                        .WithMany()
                        .HasForeignKey("KhoaHocId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BaiCuoiKhoaBackEnd.Entities.TaiKhoan", "TaiKhoan")
                        .WithMany()
                        .HasForeignKey("TaiKhoanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BaiCuoiKhoaBackEnd.Entities.TinhTrangHoc", "TinhTrangHoc")
                        .WithMany("DanhSachDangKyHoc")
                        .HasForeignKey("TinhTrangHocId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HocVien");

                    b.Navigation("KhoaHoc");

                    b.Navigation("TaiKhoan");

                    b.Navigation("TinhTrangHoc");
                });

            modelBuilder.Entity("BaiCuoiKhoaBackEnd.Entities.KhoaHoc", b =>
                {
                    b.HasOne("BaiCuoiKhoaBackEnd.Entities.LoaiKhoaHoc", "LoaiKhoaHoc")
                        .WithMany("DanhSachKhoaHoc")
                        .HasForeignKey("LoaiKhoaHocId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoaiKhoaHoc");
                });

            modelBuilder.Entity("BaiCuoiKhoaBackEnd.Entities.TaiKhoan", b =>
                {
                    b.HasOne("BaiCuoiKhoaBackEnd.Entities.QuyenHan", "QuyenHan")
                        .WithMany("DanhSachTaiKhoan")
                        .HasForeignKey("QuyenHanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("QuyenHan");
                });

            modelBuilder.Entity("BaiCuoiKhoaBackEnd.Entities.HocVien", b =>
                {
                    b.Navigation("DanhSachDangKyHoc");
                });

            modelBuilder.Entity("BaiCuoiKhoaBackEnd.Entities.LoaiBaiViet", b =>
                {
                    b.Navigation("DanhSachChuDe");
                });

            modelBuilder.Entity("BaiCuoiKhoaBackEnd.Entities.LoaiKhoaHoc", b =>
                {
                    b.Navigation("DanhSachKhoaHoc");
                });

            modelBuilder.Entity("BaiCuoiKhoaBackEnd.Entities.QuyenHan", b =>
                {
                    b.Navigation("DanhSachTaiKhoan");
                });

            modelBuilder.Entity("BaiCuoiKhoaBackEnd.Entities.TinhTrangHoc", b =>
                {
                    b.Navigation("DanhSachDangKyHoc");
                });
#pragma warning restore 612, 618
        }
    }
}
